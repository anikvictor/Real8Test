import React, { Component } from 'react';
import { Button, Alert, Modal } from 'react-bootstrap'
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import { faFacebookSquare,faFacebook,faFacebookF } from '@fortawesome/free-brands-svg-icons'
import FacebookLogin from 'react-facebook-login'

class Login extends Component {
    constructor() {
        super();
        this.state = {
            auth: false,
            variant: "",
            isregister: false,
            error: false,
            email: "",
            password: "",
            name: "",
            uEmail: "",
            uPWD: "",
            lEmail: "",
            lPassword: "",
            remil: "",
            rpwd: "",
            ruser: "",
            show: false,
        }
    }

    componentClicked = () => {
        
    }

    responseFacebook = (res) => {
        console.log(res);
        if (res.status !== "unknown") {
            localStorage.setItem("login", res);
            window.location.href = "/";
            this.props.closePopup();
        }
        else {
            localStorage.setItem("login", "");
            window.location.href = "/";
            this.props.closePopup();
        }
        
    }

    login() {
        if (this.state.lEmail.trim() != "" && this.state.lPassword != "") {
            fetch("http://localhost:3000/Login?q=" + this.state.lEmail).then((res) => {
                res.json().then((result) => {
                    if (result) {
                        localStorage.setItem("login", result);
                        window.location.href = "/";
                        this.props.closePopup();
                    }
                    else {
                        this.setState({ msg: "unable to login", variant: "danger", error: !this.state.error })
                    }
                })
            })
        }
        else if (this.state.lEmail.trim().length === 0) {
            this.setState({ uEmail: "Email can't be blank" });
        }
        else if (this.state.lPassword.trim().length === 0) {
            this.setState({ uPWD: "Password can't be blank" });
        }
        else {
            localStorage.setItem("login", false);
            this.setState({ msg: "New to Real8?", variant: "primary" });
            this.setState({ error: !this.state.error });
        }
        //this.postLogin();
    }

    register() {
        if (this.state.name.trim().length === 0) {
            this.setState({ ruser: "User can't be blank" });
        }
        else if (this.state.email.trim().length === 0) {
            this.setState({ remil: "Email can't be blank" });
        }
        else if (this.state.password.trim().length === 0) {
            this.setState({ rpwd: "Password can't be blank" });
        }
        else {
            this.props.closePopup()
            fetch("http://localhost:3000/Login", {
                method: "post",
                headers: {
                    "content-type": "application/json"
                },
                body: JSON.stringify(this.state)
            }).then((res) => {
                res.json().then((result) => {
                    if (result) {
                        localStorage.setItem("login", result);
                        window.location.href = "/";
                        this.props.closePopup();
                    }
                    else {
                        this.setState({ msg: "unable to register", variant: "danger", error: !this.state.error })
                    }
                })
            })
        }
    }

    HandelModel() {
        this.props.closePopup();
    }

    render() {
        return (
            <Modal centered show="true" onHide={() => this.HandelModel()}>
                <Modal.Header closeButton>
                    {
                        !this.state.isregister ? "Sign in" : "Create an account"
                    }
                </Modal.Header>
                <Modal.Body>
                    <Alert variant={this.state.variant} show={this.state.error}>
                        {this.state.msg}
                    </Alert>

                    {
                        this.props.term === "login" ?
                            <div>
                                <div>
                                    To protect your safety and the safety of the community you need to continue with an account (learn more). By continuing, you agree to our Community Guidelines, Terms and Privacy Policy.
                                </div><br />

                                {/* <Button variant="outline-secondary" size="lg" block className="roundButton" onClick={()=>this.fbClick()}>
                                    <FontAwesomeIcon icon={faFacebookSquare} color="#4469b0" />
                                   &nbsp;&nbsp;
                                   Continue with Facebook   faFacebook,faFacebookF
                                </Button> */}
                                <FacebookLogin 
                                    appId="706620846583893"
                                    autoLoad={true}
                                    fields="name,email,picture"
                                    onClick={this.componentClicked}
                                    callback={this.responseFacebook} 
                                    size
                                    cssClass="roundButton btn btn-outline-secondary btn-block btn-lg"
                                    icon={<FontAwesomeIcon icon={faFacebookSquare} />}
                                    textButton = "&nbsp;&nbsp;Continue with Facebook"
                                    />
                                <br />

                                <Button variant="outline-secondary" className="roundButton" size="lg" block onClick={() => this.setState({ show: true })}>Continue with email</Button>
                                <br />
                            </div>
                            :
                            null
                    }
                    {
                        this.state.show ?
                            !this.state.isregister ?
                                <div>
                                    <input type='text' className="form-control" name="lEmail" placeholder="Email" onChange={(e) => { this.setState({ lEmail: e.target.value }) }} />
                                    <span className="spanError">{this.state.uEmail}</span><br />

                                    <input type='password' className="form-control" name="lPassword" placeholder="Password" onChange={(e) => { this.setState({ lPassword: e.target.value }) }} />
                                    <span className="spanError">{this.state.uPWD}</span><br />

                                    <Button variant="secondary" onClick={() => this.login()}>Sign In</Button><br />

                                    <span>New to Real 8?</span>&nbsp;&nbsp;
                            <Button variant="secondary" onClick={() => this.setState({ isregister: true, error: false })}>Create Account</Button>
                                </div>
                                :
                                <div>
                                    <input type='text' className="form-control" name="name" placeholder="Name" onChange={(e) => { this.setState({ name: e.target.value }) }} />
                                    <span className="spanError">{this.state.ruser}</span><br />

                                    <input type='text' className="form-control" name="email" placeholder="Email" onChange={(e) => { this.setState({ email: e.target.value }) }} />
                                    <span className="spanError">{this.state.remil}</span><br />

                                    <input type='password' className="form-control" name="password" placeholder="Password" onChange={(e) => { this.setState({ password: e.target.value }) }} />
                                    <span className="spanError">{this.state.rpwd}</span><br />

                                    <Button variant="secondary" onClick={() => this.register()}>Create Account</Button><br />

                                    <span>Already have an account?</span>&nbsp;&nbsp;
                                    <Button variant="secondary" onClick={() => this.setState({ isregister: false, error: false })}>Sign In</Button>
                                </div>

                            : null
                    }
                </Modal.Body>
            </Modal>
        );
    }
}

export default Login;